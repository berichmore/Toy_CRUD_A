plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'handsoft'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {




	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//Render 기준 db
	runtimeOnly 'org.postgresql:postgresql'

//	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'

	
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
//	implementation 'mysql:mysql-connector-java:8.0.33'  // MySQL DRIVER.

	//Spring Security (BCrypt 위함)
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	// security 전체 말고 암호화만 쓸 거라면 ↓ 이것만 추가
	implementation 'org.springframework.security:spring-security-crypto:6.2.2' // Boot 3.4.3 기준

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'



}

tasks.named('test') {
	useJUnitPlatform()
}
